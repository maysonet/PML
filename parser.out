Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DELETE_TASK
    ADD_MEMBER
    GRAPH_TYPE
    CREATE_BRAINSTORM
    CREATE_GRAPH
    DELETE_MEMBER
    COMPLETED_TASK
    LIST_OVERDUE
    LIST_TODAY
    ADD_TASK
    VIEW_TASKS
    ASSIGN_TASK
    DELETE_IDEA
    VIEW_BRAINSTORM
    VIEW_MEMBERS
    NAME
    GRAPH_AXIS
    EDIT_TASK
    USERNAME
    GRAPH_DATA
    GENERATE_PROJECT
    VIEW_SCHEDULE
    NEW_PROJECT
    ADD_IDEA
    LIST_WEEK

Grammar

Rule 0     S' -> statement
Rule 1     statement -> command PHRASE
Rule 2     statement -> command PHRASE DATE DATE NUMBER
Rule 3     statement -> command PHRASE NUMBER
Rule 4     statement -> command NUMBER
Rule 5     statement -> command NUMBER NUMBER
Rule 6     command -> COMMAND

Terminals, with rules where they appear

ADD_IDEA             : 
ADD_MEMBER           : 
ADD_TASK             : 
ASSIGN_TASK          : 
COMMAND              : 6
COMPLETED_TASK       : 
CREATE_BRAINSTORM    : 
CREATE_GRAPH         : 
DATE                 : 2 2
DELETE_IDEA          : 
DELETE_MEMBER        : 
DELETE_TASK          : 
EDIT_TASK            : 
GENERATE_PROJECT     : 
GRAPH_AXIS           : 
GRAPH_DATA           : 
GRAPH_TYPE           : 
LIST_OVERDUE         : 
LIST_TODAY           : 
LIST_WEEK            : 
NAME                 : 
NEW_PROJECT          : 
NUMBER               : 2 3 4 5 5
PHRASE               : 1 2 3
USERNAME             : 
VIEW_BRAINSTORM      : 
VIEW_MEMBERS         : 
VIEW_SCHEDULE        : 
VIEW_TASKS           : 
error                : 

Nonterminals, with rules where they appear

command              : 1 2 3 4 5
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . command PHRASE
    (2) statement -> . command PHRASE DATE DATE NUMBER
    (3) statement -> . command PHRASE NUMBER
    (4) statement -> . command NUMBER
    (5) statement -> . command NUMBER NUMBER
    (6) command -> . COMMAND

    COMMAND         shift and go to state 2

    statement                      shift and go to state 3
    command                        shift and go to state 1

state 1

    (1) statement -> command . PHRASE
    (2) statement -> command . PHRASE DATE DATE NUMBER
    (3) statement -> command . PHRASE NUMBER
    (4) statement -> command . NUMBER
    (5) statement -> command . NUMBER NUMBER

    PHRASE          shift and go to state 4
    NUMBER          shift and go to state 5


state 2

    (6) command -> COMMAND .

    PHRASE          reduce using rule 6 (command -> COMMAND .)
    NUMBER          reduce using rule 6 (command -> COMMAND .)


state 3

    (0) S' -> statement .



state 4

    (1) statement -> command PHRASE .
    (2) statement -> command PHRASE . DATE DATE NUMBER
    (3) statement -> command PHRASE . NUMBER

    $end            reduce using rule 1 (statement -> command PHRASE .)
    DATE            shift and go to state 6
    NUMBER          shift and go to state 7


state 5

    (4) statement -> command NUMBER .
    (5) statement -> command NUMBER . NUMBER

    $end            reduce using rule 4 (statement -> command NUMBER .)
    NUMBER          shift and go to state 8


state 6

    (2) statement -> command PHRASE DATE . DATE NUMBER

    DATE            shift and go to state 9


state 7

    (3) statement -> command PHRASE NUMBER .

    $end            reduce using rule 3 (statement -> command PHRASE NUMBER .)


state 8

    (5) statement -> command NUMBER NUMBER .

    $end            reduce using rule 5 (statement -> command NUMBER NUMBER .)


state 9

    (2) statement -> command PHRASE DATE DATE . NUMBER

    NUMBER          shift and go to state 10


state 10

    (2) statement -> command PHRASE DATE DATE NUMBER .

    $end            reduce using rule 2 (statement -> command PHRASE DATE DATE NUMBER .)

